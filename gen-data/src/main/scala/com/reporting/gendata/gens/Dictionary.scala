package com.reporting.gendata.gens

object Dictionary {

  val statesAndCitiesAndZipCodes = Seq(
    1 -> ("Baden-Württemberg", "Stuttgart", 72160),
    1 -> ("Bayern", "Munich", 80333),
    3 -> ("Berlin", "Berlin", 14167),
    2 -> ("Zürich", "Zürich", 8033),
    1 -> ("Brandenburg", "Potsdam", 14469),
    1 -> ("Bremen", "Bremen", 28195),
    1 -> ("Hamburg", "Hamburg", 20095),
    1 -> ("Hessen", "Wiesbaden", 65185),
    1 -> ("Niedersachsen", "Hannover", 30159),
    1 -> ("Mecklenburg-Vorpommern", "Schwerin", 19055),
    1 -> ("Nordrhein-Westfalen (NRW)", "Düsseldorf", 40213),
    1 -> ("Rheinland-Pfalz", "Mainz", 55128),
    1 -> ("Saarland", "Saarbrücken", 66111),
    1 -> ("Sachsen", "Dresden", 1067),
    1 -> ("Sachsen-Anhalt", "Magdeburg", 39104),
    1 -> ("Schleswig-Holstein", "Kiel", 24103),
    1 -> ("Thüringen", "Erfurt", 99084)
  )

  val streets = Seq(
    // Switzerland
    "Rue Jeanneret",
    "Rue de Demierre",
    "Place Lehmann",
    "Rue Junod",
    "Place Brügger",
    "Chemin Pasche",
    "Rue de Blaser",
    "Rue de Rouiller",
    "Rue Pasquier",
    "Impasse Kunz",
    "Rue de Boudry",
    "Place Chollet",
    "Avenue de Berger",
    "Impasse Flückiger",
    "Impasse de Sion",
    "Rue Baeriswyl",
    "Impasse dos Santos",
    "Boulevard Zbinden",
    "Chemin de Lichtensteig",
    "Impasse de Delémont",
    "Rue de Emery",
    "Chemin de Nyon",
    "Boulevard de Morel",
    "Avenue Cattin",
    "Boulevard Geiser",
    // German
    "Klugeplatz",
    "Kremerplatz",
    "Alwine-Auer-Gasse",
    "Hans-J.-Berg-Ring",
    "Madeleine-Kunz-Gasse",
    "Westphalallee",
    "Heckstraße",
    "Benzstr.",
    "Fritschallee",
    "Jürgensstraße"
  )

  val menFirstNames = Seq(
    "Ali",
    "Beaulah",
    "Jorgen",
    "Jimmy",
    "Fausto",
    "Gustav",
    "Sven",
    "Jonas",
    "Eun",
    "Ricki",
    "Dexter",
    "Devon",
    "Bobbi",
    "Gerardo",
    "Kermit",
    "Teodoro",
    "Rashad",
    "Klaus",
    "Deon",
    "Irwin",
    "Thomas",
    "Michael",
    "Uwe",
    "Petr",
    "Alexander",
    "Paul",
    "Roland",
    "Boris",
    "Daniel",
    "Mathias",
    "Willy",
    "Murat",
    "Alex",
    "Oliver",
    "Roberto"
  )

  val womenFirstNames = Seq(
    "Latonya",
    "Sonja",
    "Jessika",
    "Terrance",
    "Alida",
    "Ona",
    "Mose",
    "Layla",
    "Ivy",
    "Joey",
    "Melba",
    "Beaulah",
    "Maritza",
    "Amira",
    "Kristal",
    "Vanda",
    "Fausto",
    "Cherise",
    "Zita",
    "Jannet",
    "Tracey",
    "Eun",
    "Jasmin",
    "Dexter",
    "Marielle",
    "Devon",
    "Laree",
    "Kasha",
    "Anya",
    "Daphne",
    "Exie",
    "Clair",
    "Kassie",
    "Alita",
    "Freda",
    "Mariette",
    "Tempie",
    "Lael",
    "Mercy",
    "Nilda",
    "Kiley",
    "Nadya"
  )

  val lastNames = Seq(
    "Johansson",
    "Babineau",
    "Eastin",
    "Martina",
    "Eicher",
    "Trigg",
    "Smither",
    "Ibrahimovic",
    "Christen",
    "Armstead",
    "Kapoor",
    "Brien",
    "Flewelling",
    "Bach",
    "Letcher",
    "Juarez",
    "Bronner",
    "Lowe",
    "Mcmath",
    "Deininger",
    "Houze",
    "Gudger",
    "Mahan",
    "Follett",
    "Neece",
    "Degarmo",
    "Mcwain",
    "Lamer",
    "Medel",
    "Lundgreen",
    "Lefebvre",
    "Widger",
    "Buckner",
    "Krol",
    "Urena",
    "Cypert",
    "Aylesworth",
    "Hooton",
    "Edmonson",
    "Bilodeau",
    "Germain",
    "Tiernan",
    "Gerena",
    "Gritton",
    "Davies",
    "Harrigan",
    "Isabell",
    "Folger",
    "Ros",
    "Decuir",
    "Wilfong"
  )

  val salutation = Seq("Herr", "Frau")

  // https://de.wikipedia.org/wiki/Liste_akademischer_Grade_(Deutschland)
  val academicDegree = Seq(
    "Dipl-Ing.",
    "M.A.",
    "M.Sc.",
    "M.Eng.",
    "LL.M",
    "lic. rer. publ.",
    "B.A.",
    "Mag. rer. publ.",
    "Dipl.-Inf. (DH)",
    "Dipl.-Soz.päd. (DH)",
    "Dipl.-Soz.päd. (DH)",
    "Dipl.-Wirt.-Ing. (FH)",
    "Dipl. Audiovisuelle Medien",
    "Dipl.-Reg.",
    "Dipl.-Angl.",
    "Dipl.-Geoökol.",
    "Dipl.-Logist.",
    "Dr. med. sci.",
    "Dr. rer. hort.",
    "Dr. habil. "
  )

  val domains = Seq("gmail.com", "gmx.de", "hotmail.com", "mail.de")

  val bics = Seq(
    "DEUTDEFF",
    "DE999999XXX",
    "DXIADEBBXXX",
    "SCFBDE33XXX",
    "BELADEBEXXX",
    "PBNKDEFFXXX",
    "DGZFDEFFBER",
    "GENODEF1P01",
    "DEUTDEBB181",
    "BYLADEM1001",
    "GENODED1KDB",
    "MARKDEF1100"
  )
}
