#!/usr/bin/java --source 11

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;

import static java.lang.String.format;

public class Main {
    static List<String> services = List.of("api-search", "api-report", "gen-data");

    public static void main(String[] args) throws IOException {
        if (args.length == 0) {
            System.out.println("Specify docker registry url, for example minikube:5000");
        } else {
            push2k8s(args[0]);
        }
    }

    static void push2k8s(String repo) throws IOException {
        var content = new String(Files.readAllBytes(Paths.get("version.sbt")));
        var version = content.split(":=")[1].trim().replace("\"", "");
        System.out.printf("image version: %s\n", version);

        services.forEach(svc -> {
            var name = format("%s/%s:%s", repo, svc, version);
            sh("docker", "tag", svc + ":" + version, name);
            sh("docker", "push", name);
            System.out.printf("Push done for '%s'\n", name);
        });
    }

    static void sh(String... cmd) {
        try {
            var p = new ProcessBuilder(cmd).start();
            printout(p.getInputStream(), p.getErrorStream());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    static void printout(InputStream... inStreams) {
        Arrays.stream(inStreams).forEach(s -> {
            var reader = new BufferedReader(new InputStreamReader(s));
            reader.lines().forEach(System.out::println);
        });
    }
}